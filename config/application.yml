spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/aggregation_insurances
    username: root
    password: root
    hikari:
      maximum-pool-size: 10
      connection-test-query: select 1
  jpa:
    hibernate:
      ddl-auto: update
  redis:
    host: localhost
    port: 6379
    
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9091/oauth2/jwks
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    bootstrap-servers:
      - localhost:9092
  cloud:
    consul:
      host: 192.168.1.19
      discovery:
        ip-address: 192.168.1.19
        prefer-ip-address: true
        port: 10000
        health-check-path: /management/health
    stream:
      bindings:
        output-out-0:
          destination: createdExecutions.topic
          producer:
            use-native-encoding: true
        processor-in-0:
          destination: createdExecutions.topic
          group: josemi
          consumer:
            concurrency: 4 
        processor-out-0:
          destination: createdExecutions-out.topic
          producer:
            use-native-encoding: true
        pollableBean-out-0:
          destination: createdExecutions-out.topic
            
        
server:
  port: 9090
  shutdown: graceful
  #ssl:
  #  key-store: ./ssl/keystore.pkcs12
  #  key-store-password: fenix000
  #  key-store-type: pkcs12
  #  key-alias: insurances-aggregator
  #  key-password: fenix000
  
selenium:
  grid:
    url: http://localhost:4444
    
certificates:
  path: ./config/keystores
  
  
